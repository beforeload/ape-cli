#!/usr/bin/env node
var program = require('commander')
var path = require('path')
var multiline = require('multiline')
var colors = require('colors')
var pkg = require('../package.json')
var prompt = require('prompt')

var Init = require('../dist/init')
var Build = require('../dist/build')

program
  .version(pkg.version)
  .usage(multiline(function() {/*
  [command] [options]
*/}))

program
  .command('init [type]')
  .usage(multiline(function() {/*
[type]

  examples:

  $ ape init
  $ ape init react   初始化React项目

  templates:
    see in ape-cli project

  */}))
  .description('初始化项目目录')
  .action(function(type, prog) {
    console.log(colors.cyan(`初始化${type||'reactjs'}项目...`))
    Init.exec(type)
  })

program
  .command('install')
  .description('安装项目依赖')
  .action(function(prog) {
    Build.install()
  })

program
  .command('server')
  .description('开启本地服务')
  .action(function(prog) {
    Build.server()
  })
program
  .command('build')
  .description('执行项目构建')
  .option('--dev', '构建测试版本(default)')
  .option('--release', '构建发布版本')
  .action(function(prog) {
    Build.build()
  })

// program
//   .command('publish')
//   .description('执行项目发布')
//   .option('--test', '发布测试环境(default)')
//   .option('--online', '发布线上环境')
//   .action(function(prog) {
//     if(prog.online) {
//       Build.online()
//     } else {
//       Build.test()
//     }
//   })

program.on('--help', function() {
 console.log('  Examples:')
 console.log('')
 console.log('    $ ape init -h')
 console.log('    $ ape install')
 console.log('    $ ape server')
 console.log('    $ ape build')
 console.log('')
 console.log('  FAQ: https://github.com/beforeload/ape-cli/issues')
 console.log('')
})

program.parse(process.argv)
